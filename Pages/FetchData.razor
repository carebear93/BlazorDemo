@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Meteorite Data</h1>

<p>The following table shows the Meteor Data Set.</p>

@if (data == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Location</th>
                <th>Year</th>
                <th>Classification</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var meteor in data)
            {
                <tr>
                    <td>@meteor.id</td>
                    <td>@meteor.name</td>
                    <td>@meteor.year.ToShortDateString()</td>
                    <td>@meteor.recclass</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private MeteorData[]? data;

    protected override async Task OnInitializedAsync()
    {
        data = await Http.GetFromJsonAsync<MeteorData[]>("data/meteorLanding.json");
    }

    public class MeteorData
    {
        public int id { get; set; }
        public string? name { get; set; }
        public DateTime year { get; set; }
        
        public string? recclass {get; set;}

    }
}
